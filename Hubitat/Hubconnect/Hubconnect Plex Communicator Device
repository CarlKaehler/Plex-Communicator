/**
 *  Plex Communicator Device
 *
 *  Copyright 2018 Jake Tebbett (jebbett)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 * 2018-11-17	2.0		Updated to report playbackType Correctly		
 */

metadata {
	definition (name: "Hubconnect Plex Communicator Device", namespace: "shackrat", author: "Carl Kaehler") {
	capability "Music Player"
        command "playbackType", ["string"]
	attribute "playbackType", "string"
	}
}

// External
def playbackType(type) {
	parent.sendDeviceEvent(device.deviceNetworkId, "playbackType", [type])
    log.debug "Playback type set as $type"
}

def setPlayStatus(type){
    // Value needs to be playing, paused or stopped
    parent.sendDeviceEvent(device.deviceNetworkId, "status", [type])
	log.debug "Status set to $type"
}

def play() {	        
    parent.sendDeviceEvent(device.deviceNetworkId, "status", ["playing"])
}

def pause() {
    parent.sendDeviceEvent(device.deviceNetworkId, "status", ["paused"])
}

def stop() {
    parent.sendDeviceEvent(device.deviceNetworkId, "status", ["stopped"])
}

def sync()
{
    // The server will respond with updated status and details
    parent.syncDevice(device.deviceNetworkId, "PlexDevice")
    sendEvent([name: "version", value: "v${driverVersion.major}.${driverVersion.minor}.${driverVersion.build}"])
}
